{"version":3,"sources":["./src/environments/environment.ts","./src/app/app-material.module.ts","./src/app/auth/phone-selection/phone-selection.component.ts","./src/app/auth/phone-selection/phone-selection.component.html","./src/app/_shared/backend.service.ts","./src/app/auth/connect/connect.component.ts","./src/app/auth/connect/connect.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_layout/app-layout/app-layout.component.ts","./src/app/_layout/app-layout/app-layout.component.html","./src/app/app.module.ts","./src/app/_code/manager-environment.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/server-selection/server-selection.component.ts","./src/app/auth/server-selection/server-selection.component.html","./src/app/_navigation/nav-topbar/nav-topbar.component.ts","./src/app/_navigation/nav-topbar/nav-topbar.component.html","./src/app/_layout/login-layout/login-layout.component.ts","./src/app/_layout/login-layout/login-layout.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backend: ''\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from \"@angular/core\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatAutocompleteModule,\r\n    MatTabsModule,\r\n    MatSidenavModule,\r\n    MatChipsModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n    MatSelectModule,\r\n    MatProgressBarModule,\r\n  ],\r\n\r\n  exports: [\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatAutocompleteModule,\r\n    MatTabsModule,\r\n    MatSidenavModule,\r\n    MatBadgeModule,\r\n    MatChipsModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatDividerModule,\r\n    MatGridListModule,\r\n    MatSelectModule,\r\n    MatProgressBarModule,\r\n  ],\r\n})\r\nexport class AppMaterialComponentsModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { BackendService } from 'src/app/_shared/backend.service';\r\nimport Swal from 'sweetalert2';\r\nimport { DeviceMapParameters } from 'src/app/_interfaces/device.map';\r\nimport { ManagerEnvironment } from 'src/app/_code/manager-environment';\r\nimport { ServerConnection } from 'jema';\r\n\r\n@Component({\r\n  selector: 'app-phone-selection',\r\n  templateUrl: './phone-selection.component.html',\r\n  styleUrls: ['./phone-selection.component.css']\r\n})\r\nexport class PhoneSelectionComponent implements OnInit {\r\n\r\n  bus: ServerConnection;\r\n  public phoneSelectionForm!: FormGroup;\r\n  manager!: string;\r\n  isLoading = false;\r\n  disable = false;\r\n\r\n  constructor(private service: BackendService) {\r\n    this.bus = service.getServerConnection();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.disable = false;\r\n    this.manager = ManagerEnvironment.getBackendUrl();\r\n\r\n    this.bus.IsPhoneMapped().subscribe(\r\n      (data: any) => {\r\n        this.reconnectDevice(data.phone);\r\n      },\r\n      () => {\r\n        // console.error(err);\r\n      }\r\n    );\r\n\r\n    this.phoneSelectionForm = new FormGroup({\r\n      deviceName: new FormControl('', [Validators.required, Validators.maxLength(4), Validators.pattern('[0-9]*')]),\r\n    });\r\n\r\n  }\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.phoneSelectionForm.controls[controlName].hasError(errorName);\r\n  }\r\n\r\n  mapDevice() {\r\n    this.mapPhone(this.phoneSelectionForm.value);\r\n  }\r\n\r\n  reconnectDevice(phone: string) {\r\n    this.mapPhone({ deviceName: phone });\r\n  }\r\n\r\n  mapPhone(param: DeviceMapParameters) {\r\n    this.disable = true;\r\n    this.isLoading = true;\r\n    this.bus.mapPhone(param).subscribe(\r\n      (data: any) => {\r\n        this.isLoading = false;\r\n        this.service.setAppState({ state: 'Ready' });\r\n        if (data.teamLead) {\r\n          console.log('Enabling Team Lead features...');\r\n          // this.service.enableTeamLeadFeatures(true);\r\n        }\r\n        this.disable = false;\r\n      },\r\n      err => {\r\n        console.error(err);\r\n        this.isLoading = false;\r\n        this.disable = false;\r\n        if (err.response !== undefined) { err = err.response; }\r\n\r\n        if (err.status === 400) {\r\n\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error Activating Phone',\r\n            text: err.data\r\n          });\r\n\r\n        } else {\r\n\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: err.message\r\n          });\r\n\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n}\r\n","\r\n<form [formGroup]=\"phoneSelectionForm\" autocomplete=\"off\" (ngSubmit)=\"mapDevice()\">\r\n  <mat-progress-bar mode=\"indeterminate\" *ngIf=\"isLoading\"> </mat-progress-bar>\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"agent-image\"></div>\r\n      <mat-card-title>Agent</mat-card-title>\r\n      <mat-card-subtitle>Welcome back</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"mat-card-subtitle\">\r\n        You logged in successfully.<br><br>\r\n        We now need the phone number you would be using to receive the calls from queues.\r\n        Enter the 4 digit extention number you are currently using.\r\n      </div>\r\n\r\n      <mat-form-field>\r\n        <input matInput type=\"text\" placeholder=\"Phone Number\" formControlName=\"deviceName\" id=\"phone\">\r\n        <mat-error *ngIf=\"hasError('deviceName', 'required')\">Phone Number is required</mat-error>\r\n        <mat-error *ngIf=\"hasError('deviceName', 'pattern')\">Special characters are not allowed</mat-error>\r\n        <mat-error *ngIf=\"hasError('deviceName', 'maxlength')\">4 characters max.</mat-error>\r\n      </mat-form-field>\r\n\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\"  [disabled]=\"!phoneSelectionForm.valid || disable\">SUBMIT</button>\r\n      <a href=\"{{manager}}\" target=\"_manager\" mat-button color=\"secondary\">MANAGE</a>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n</form>","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { ServerConnection } from 'jema';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ReturnStatement } from '@angular/compiler';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BackendService {\r\n\r\n  private serverConnection: ServerConnection | undefined;\r\n  public appState = new BehaviorSubject<any>({ state: 'Unknown' });\r\n\r\n  constructor() {\r\n  }\r\n\r\n  setAppState(state: any): void {\r\n    this.appState.next(state);\r\n  }\r\n\r\n  getToken(): string {\r\n    let token = localStorage.getItem('access_token');\r\n    if (token == null) token = '';\r\n    return token;\r\n  }\r\n\r\n  saveToken(token: string) {\r\n    localStorage.setItem('access_token', token);\r\n  }\r\n\r\n  getBackendUrl(): string {\r\n    if (environment.backend !== '') {\r\n      return environment.backend;\r\n    } else {\r\n      let backend = localStorage.getItem('backend');\r\n      if (backend == null) backend = '';\r\n      return backend;\r\n    }\r\n  }\r\n\r\n  saveBackendIpAddress(ip: string) {\r\n    localStorage.setItem('backend', ip);\r\n  }\r\n\r\n  getServerConnection(): ServerConnection {\r\n    if (this.serverConnection == undefined) throw new Error('Server is not connected');\r\n    return this.serverConnection;\r\n  }\r\n\r\n  setupServerConnection() {\r\n    this.serverConnection = new ServerConnection(this.getBackendUrl(), this.getToken());\r\n  }\r\n\r\n  connect() {\r\n    if (this.serverConnection == undefined) throw new Error('Server is not setup');\r\n    this.serverConnection.connect();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BackendService } from 'src/app/_shared/backend.service';\r\n\r\n@Component({\r\n  selector: 'app-connect',\r\n  templateUrl: './connect.component.html',\r\n  styleUrls: ['./connect.component.css']\r\n})\r\nexport class ConnectComponent implements OnInit {\r\n\r\n  constructor(private service: BackendService) { }\r\n\r\n  ngOnInit() {\r\n    this.service.setupServerConnection();\r\n\r\n    this.service.getServerConnection().connectionState.subscribe((state) => {\r\n      this.service.setAppState({ state: 'Connected' });\r\n    });\r\n\r\n    this.service.connect();\r\n\r\n  }\r\n\r\n}\r\n","<p>\r\n  connect works!\r\n</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServerConnection } from 'jema';\r\nimport { BackendService } from '../_shared/backend.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\n\r\nexport class DashboardComponent implements OnInit {\r\n  serverConnection: ServerConnection;\r\n\r\n  constructor(private service: BackendService) {\r\n    this.serverConnection = service.getServerConnection();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-5\">\r\n  <!-- Space for Top Bar -->\r\n</div>\r\n\r\n<xe-queue-monitor-panel [serverConnection]=\"serverConnection\"></xe-queue-monitor-panel>\r\n\r\n<div class=\"row mt-5\">\r\n  <!-- Space -->\r\n</div>\r\n\r\n<xe-team-monitor-panel [serverConnection]=\"serverConnection\"></xe-team-monitor-panel>\r\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BackendService } from './_shared/backend.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'live-view';\n\n  constructor(private service: BackendService, private router: Router) {\n    this.service.appState.subscribe((state) => {\n      switch (state.state) {\n        case \"Unknown\": {\n          this.router.navigateByUrl(\"/server\");\n          break;\n        }\n\n        case \"ServerFound\": {\n          this.router.navigateByUrl(\"/login\");\n          break;\n        }\n\n        case \"LoggedIn\": {\n          this.router.navigateByUrl(\"/connect\");\n          break;\n        }\n\n        case \"Connected\": {\n          //   this.router.navigateByUrl(\"/phone\");\n          //   break;\n          // }\n\n          // case \"Ready\": {\n          const bus = this.service.getServerConnection();\n          // bus.refreshPhoneState();\n          // bus.getAgentInfo();\n          this.router.navigateByUrl(\"/dashboard\");\n          break;\n        }\n\n        default: {\n          console.log(\"Unhandled App State: \" + state.state);\n          break;\n        }\n      }\n    });\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-app-layout',\r\n  templateUrl: './app-layout.component.html',\r\n  styleUrls: ['./app-layout.component.css']\r\n})\r\nexport class AppLayoutComponent implements OnInit {\r\n\r\n  showFiller = false;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    window.addEventListener('beforeunload', function (e) {\r\n      const confirmationMessage = '\\o/';\r\n      e.returnValue = confirmationMessage;\r\n      return confirmationMessage;\r\n    });\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light fixed-top flex-md-nowrap shadow  py-0\">\r\n  <a class=\"navbar-brand col-sm-2 col-md-1 mr-0\" href=\"/\">\r\n    <img src=\"assets/logo-old.png\" alt=\"Xema\" width=\"45\" class=\"d-block mx-auto\">\r\n  </a>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <app-nav-topbar></app-nav-topbar>\r\n  </div>\r\n</nav>\r\n\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <main role=\"main\" class=\"col-md-11 ml-sm-auto col-lg-11 pl-0\">\r\n      <div class=\"justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </main>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppMaterialComponentsModule } from './app-material.module';\nimport { AppComponent } from './app.component';\n\nimport { AppLayoutComponent } from './_layout/app-layout/app-layout.component';\nimport { LoginLayoutComponent } from './_layout/login-layout/login-layout.component';\nimport { NavTopbarComponent } from './_navigation/nav-topbar/nav-topbar.component';\n\nimport { ServerSelectionComponent } from './auth/server-selection/server-selection.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { PhoneSelectionComponent } from './auth/phone-selection/phone-selection.component';\nimport { ConnectComponent } from './auth/connect/connect.component';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { QueueMonitorPanelModule } from '@xema/queue-monitor-panel';\nimport { TeamMonitorPanelModule } from '@xema/team-monitor-panel';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppLayoutComponent,\n    LoginLayoutComponent,\n    NavTopbarComponent,\n    DashboardComponent,\n    ServerSelectionComponent,\n    LoginComponent,\n    PhoneSelectionComponent,\n    ConnectComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    AppMaterialComponentsModule,\n    QueueMonitorPanelModule,\n    TeamMonitorPanelModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { environment } from '../../environments/environment';\r\n\r\nexport class ManagerEnvironment {\r\n  static getBackendUrl(): string {\r\n    if (environment.backend !== '') {\r\n      return environment.backend;\r\n    } else {\r\n      let backend = localStorage.getItem('backend');\r\n      if (backend == null) backend = '';\r\n      return backend;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BackendService } from 'src/app/_shared/backend.service';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ManagerEnvironment } from 'src/app/_code/manager-environment';\r\nimport { Authenticator, ServerConnection } from 'jema';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public loginForm!: FormGroup;\r\n  manager!: string;\r\n  isLoading = false;\r\n  disable = false;\r\n\r\n  constructor(private service: BackendService) { }\r\n\r\n  ngOnInit() {\r\n    this.disable = false;\r\n    this.manager = ManagerEnvironment.getBackendUrl();\r\n\r\n\r\n    // this.service.IsAgentAuthenticated().subscribe(\r\n    //   data => {\r\n    //     this.bus.setAppState({ state: 'LoggedIn' });\r\n    //   },\r\n    //   err => {\r\n    //     console.error(err);\r\n    //   }\r\n    // );\r\n\r\n    this.loginForm = new FormGroup({\r\n      username: new FormControl('', [\r\n        Validators.required, Validators.maxLength(60),\r\n        // Validators.pattern('[a-zA-Z1-9]*')\r\n      ]),\r\n      password: new FormControl('', [Validators.required, Validators.maxLength(100)])\r\n    });\r\n\r\n  }\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.loginForm.controls[controlName].hasError(errorName);\r\n  }\r\n\r\n  submit() {\r\n    this.isLoading = true;\r\n    this.disable = true;\r\n\r\n    const auth = new Authenticator(ManagerEnvironment.getBackendUrl());\r\n    auth.getAuthToken(this.loginForm.value).subscribe(\r\n      (data: any) => {\r\n        this.isLoading = false;\r\n        this.disable = false;\r\n        this.service.saveToken(data.auth_token);\r\n        this.service.setAppState({ state: 'LoggedIn' });\r\n      },\r\n      err => {\r\n        this.isLoading = false;\r\n        this.disable = false;\r\n        if (err.response !== undefined) { err = err.response; }\r\n        if (err.status === 401) {\r\n\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Authentication failed!',\r\n            text: 'It seems you haven\\'t entered valid credentials. Check your User Name and Password!'\r\n          });\r\n\r\n        } else {\r\n\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: err.message\r\n          });\r\n\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"loginForm\" autocomplete=\"off\" (ngSubmit)=\"submit()\">\r\n  <mat-progress-bar mode=\"indeterminate\" *ngIf=\"isLoading\"> </mat-progress-bar>\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"agent-image\"></div>\r\n      <mat-card-title class=\"mb-1\">Manager</mat-card-title>\r\n      <mat-card-subtitle>Welcome back</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"mat-card-subtitle\">\r\n        This is a business use computer system and is for authorized use only! Users of this computer system have no\r\n        explicit or implicit expectation of privacy. Any and all user activity, data files, and communications on this\r\n        system may be intercepted, monitored, recorded, copied, audited, inspected, and disclosed to local, state, or\r\n        federal law enforcement, administrators, and/or their authorized agents. By clicking SUBMIT the user agrees to\r\n        the above statement.\r\n      </div>\r\n\r\n      <mat-form-field class=\"w-75\">\r\n        <input matInput type=\"text\" placeholder=\"User Id\" formControlName=\"username\" id=\"username\">\r\n        <mat-error *ngIf=\"hasError('username', 'required')\">User Name is required</mat-error>\r\n        <mat-error *ngIf=\"hasError('username', 'pattern')\">Special characters are not allowed</mat-error>\r\n        <mat-error *ngIf=\"hasError('username', 'maxlength')\">60 characters max.</mat-error>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n      <mat-form-field class=\"w-75\">\r\n        <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\" id=\"password\">\r\n        <mat-error *ngIf=\"hasError('password', 'required')\">Password is required</mat-error>\r\n        <mat-error *ngIf=\"hasError('password', 'maxlength')\">Do you really remember this password?</mat-error>\r\n      </mat-form-field>\r\n\r\n    </mat-card-content>\r\n    <mat-card-actions class=\"w-75\">\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!loginForm.valid || disable\">SUBMIT</button>\r\n      <a href=\"{{manager}}\" target=\"_manager\" mat-button color=\"secondary\">MANAGE</a>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { BackendService } from 'src/app/_shared/backend.service';\r\nimport { ManagerEnvironment } from 'src/app/_code/manager-environment';\r\nimport { NetworkTester } from 'jema';\r\n\r\n@Component({\r\n  selector: 'app-server-selection',\r\n  templateUrl: './server-selection.component.html',\r\n  styleUrls: ['./server-selection.component.css']\r\n})\r\nexport class ServerSelectionComponent implements OnInit {\r\n\r\n  public serverSelectionForm!: FormGroup;\r\n  tester = new NetworkTester();\r\n\r\n  constructor(private service: BackendService) { }\r\n\r\n  ngOnInit() {\r\n    this.serverSelectionForm = new FormGroup({\r\n      serverIp: new FormControl('', [Validators.required, Validators.maxLength(100)]),\r\n    });\r\n\r\n    if (ManagerEnvironment.getBackendUrl() !== null &&\r\n      ManagerEnvironment.getBackendUrl() !== undefined &&\r\n      ManagerEnvironment.getBackendUrl() !== '') {\r\n      this.service.setAppState({ state: 'ServerFound' });\r\n    } else {\r\n      const detectedServerName = location.hostname + (location.port ? ':' + location.port : '');\r\n      const detectedProtocol = location.protocol;\r\n\r\n      this.tester.ping(detectedProtocol + '//' + detectedServerName).subscribe(() => {\r\n        this.serverSelectionForm.controls['serverIp'].setValue(detectedServerName);\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.serverSelectionForm.controls[controlName].hasError(errorName);\r\n  }\r\n\r\n  saveIpAddress() {\r\n    let url = this.serverSelectionForm.value.serverIp;\r\n\r\n    if (!url.startsWith('http:') && !url.startsWith('https:')) {\r\n      url = location.protocol + '//' + url;\r\n    }\r\n\r\n    this.service.saveBackendIpAddress(url);\r\n    this.service.setAppState({ state: 'ServerFound' });\r\n  }\r\n\r\n\r\n}\r\n","<form [formGroup]=\"serverSelectionForm\" autocomplete=\"off\" (ngSubmit)=\"saveIpAddress()\">\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"agent-image\"></div>\r\n      <mat-card-title>Agent</mat-card-title>\r\n      <mat-card-subtitle>Locate a server</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"mat-card-subtitle\">\r\n        Welcome here.<br><br>\r\n        Who is serving you calls today? If you haven't found anybody to serve you, we may be able to help you. Talk to\r\n        us!\r\n      </div>\r\n\r\n      <mat-form-field>\r\n        <input matInput type=\"text\" placeholder=\"IP Address\" formControlName=\"serverIp\" id=\"ip\">\r\n        <mat-error *ngIf=\"hasError('serverIp', 'required')\">Server IP Address or URL is required.</mat-error>\r\n        <mat-error *ngIf=\"hasError('serverIp', 'maxlength')\">\r\n          A good IP Address or URL is usually not that long.\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!serverSelectionForm.valid\">SUBMIT</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n</form>","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { BackendService } from \"../../_shared/backend.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ServerConnection } from \"jema\";\r\n\r\n@Component({\r\n  selector: \"app-nav-topbar\",\r\n  templateUrl: \"./nav-topbar.component.html\",\r\n  styleUrls: [\"./nav-topbar.component.css\"],\r\n})\r\nexport class NavTopbarComponent implements OnInit {\r\n  bus: ServerConnection;\r\n  phoneState: any;\r\n  breakState: any;\r\n  info: any;\r\n\r\n  constructor(\r\n    private service: BackendService,\r\n    private router: Router,\r\n  ) {\r\n    this.bus = service.getServerConnection();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.bus.phoneState.subscribe((state) => {\r\n      this.phoneState = state;\r\n    });\r\n\r\n    this.bus.breakState.subscribe((state) => {\r\n      this.breakState = state;\r\n    });\r\n\r\n    this.bus.agentInfo.subscribe((res) => {\r\n      this.info = res;\r\n    });\r\n  }\r\n\r\n  Logoff() {\r\n    // this.bus.logout().subscribe(\r\n    //   data => {\r\n    //     this.service.setAppState({ state: 'Unknown' });\r\n    //     localStorage.removeItem('access_token');\r\n    //     this.router.navigateByUrl('/login');\r\n    //   },\r\n    //   err => {\r\n    //     console.error(err);\r\n    //   }\r\n    // );\r\n\r\n    this.service.setAppState({ state: \"Unknown\" });\r\n    localStorage.removeItem(\"access_token\");\r\n    this.router.navigateByUrl(\"/login\");\r\n  }\r\n\r\n  askBreak() {\r\n  }\r\n\r\n  cancelBreak() {\r\n    this.bus.cancelBreak();\r\n  }\r\n\r\n  exitBreak() {\r\n    this.bus.exitBreak();\r\n  }\r\n}\r\n","<ul class=\"navbar-nav mr-auto ml-2 ullist\">\r\n</ul>\r\n\r\n\r\n<a class=\"nav-link btn btn-sm btn-outline-secondary text-white signout position-absolute\" href=\"\" (click)=\"Logoff()\">\r\n  Logout </a>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login-layout',\r\n  templateUrl: './login-layout.component.html',\r\n  styleUrls: ['./login-layout.component.css']\r\n})\r\nexport class LoginLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row wallpaper\">\r\n    <div class=\"col-sm-7\"></div>\r\n    <div class=\"col-sm-4 window\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConnectComponent } from './auth/connect/connect.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { PhoneSelectionComponent } from './auth/phone-selection/phone-selection.component';\nimport { ServerSelectionComponent } from './auth/server-selection/server-selection.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AppLayoutComponent } from './_layout/app-layout/app-layout.component';\nimport { LoginLayoutComponent } from './_layout/login-layout/login-layout.component';\n\n\nconst routes: Routes = [\n\n  // login, forgot password pages\n  {\n    path: '',\n    component: LoginLayoutComponent,\n    children: [\n      { path: 'server', component: ServerSelectionComponent },\n      { path: 'login', component: LoginComponent },\n      { path: 'connect', component: ConnectComponent },\n      { path: 'phone', component: PhoneSelectionComponent },\n      { path: 'forgot', component: LoginComponent },\n    ]\n  },\n\n  // application pages\n  {\n    path: '',\n    component: AppLayoutComponent,\n    children: [\n      { path: 'dashboard', component: DashboardComponent, pathMatch: 'full' },\n    ]\n  },\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}